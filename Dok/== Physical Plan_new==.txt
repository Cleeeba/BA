== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [NgramId#4L ASC NULLS FIRST, Year#205 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(NgramId#4L ASC NULLS FIRST, Year#205 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=784]
      +- Project [NgramId#4L, Year#205, Frequency_N#236L, Frequency_L#271L, value#232L AS Frequency_R#308L]
         +- SortMergeJoin [NgramId#4L, Year#205], [NgramId#276L, Year#231], Inner
            :- Project [NgramId#4L, Year#205, Frequency_N#236L, value#219L AS Frequency_L#271L]
            :  +- SortMergeJoin [NgramId#4L, Year#205], [NgramId#240L, Year#218], Inner
            :     :- Sort [NgramId#4L ASC NULLS FIRST, Year#205 ASC NULLS FIRST], false, 0
            :     :  +- Exchange hashpartitioning(NgramId#4L, Year#205, 200), ENSURE_REQUIREMENTS, [plan_id=705]
            :     :     +- Project [NgramId#4L, Year#205, value#206L AS Frequency_N#236L]
            :     :        +- Filter ((Year#205 >= 1800) AND (Year#205 < 2000))
            :     :           +- Generate explode(new_Frequency_N#197), [NgramId#4L], false, [Year#205, value#206L]
            :     :              +- Project [NgramId#4L, map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency_N#115) AS new_Frequency_N#197]
            :     :                 +- SortMergeJoin [RightChildNgramId#71L], [NgramId#150L], Inner
            :     :                    :- Sort [RightChildNgramId#71L ASC NULLS FIRST], false, 0
            :     :                    :  +- Exchange hashpartitioning(RightChildNgramId#71L, 200), ENSURE_REQUIREMENTS, [plan_id=628]
            :     :                    :     +- Project [NgramId#4L, RightChildNgramId#71L, Frequency_N#115]
            :     :                    :        +- SortMergeJoin [LeftChildNgramId#42L], [NgramId#121L], Inner
            :     :                    :           :- Sort [LeftChildNgramId#42L ASC NULLS FIRST], false, 0
            :     :                    :           :  +- Exchange hashpartitioning(LeftChildNgramId#42L, 200), ENSURE_REQUIREMENTS, [plan_id=620]
            :     :                    :           :     +- Project [NgramId#4L, LeftChildNgramId#42L, RightChildNgramId#71L, Frequency#11 AS Frequency_N#115]
            :     :                    :           :        +- SortMergeJoin [NgramId#4L], [NgramId#10L], Inner
            :     :                    :           :           :- Sort [NgramId#4L ASC NULLS FIRST], false, 0
            :     :                    :           :           :  +- Exchange hashpartitioning(NgramId#4L, 200), ENSURE_REQUIREMENTS, [plan_id=612]
            :     :                    :           :           :     +- Project [NgramId#4L, LeftChildNgramId#42L, RightChildNgramId#71L]
            :     :                    :           :           :        +- SortMergeJoin [RightChildTokenIds#36], [Tokens#21], Inner
            :     :                    :           :           :           :- Sort [RightChildTokenIds#36 ASC NULLS FIRST], false, 0
            :     :                    :           :           :           :  +- Exchange hashpartitioning(RightChildTokenIds#36, 200), ENSURE_REQUIREMENTS, [plan_id=604]
            :     :                    :           :           :           :     +- Project [NgramId#4L, RightChildTokenIds#36, LeftChildNgramId#42L]
            :     :                    :           :           :           :        +- SortMergeJoin [LeftChildTokenIds#31], [Tokens#21], Inner
            :     :                    :           :           :           :           :- Sort [LeftChildTokenIds#31 ASC NULLS FIRST], false, 0
            :     :                    :           :           :           :           :  +- Exchange hashpartitioning(LeftChildTokenIds#31, 200), ENSURE_REQUIREMENTS, [plan_id=589]
            :     :                    :           :           :           :           :     +- Project [NgramId#4L, slice(Ngram#24, 1, (Length#27 - 1)) AS LeftChildTokenIds#31, slice(Ngram#24, 2, (Length#27 - 1)) AS RightChildTokenIds#36]
            :     :                    :           :           :           :           :        +- Project [NgramId#4L, Tokens#21 AS Ngram#24, size(Tokens#21, true) AS Length#27]
            :     :                    :           :           :           :           :           +- Filter (size(Tokens#21, true) > 1)
            :     :                    :           :           :           :           :              +- ObjectHashAggregate(keys=[NgramId#4L], functions=[collect_list(TokenId#6L, 0, 0)])
            :     :                    :           :           :           :           :                 +- Exchange hashpartitioning(NgramId#4L, 200), ENSURE_REQUIREMENTS, [plan_id=575]
            :     :                    :           :           :           :           :                    +- ObjectHashAggregate(keys=[NgramId#4L], functions=[partial_collect_list(TokenId#6L, 0, 0)])
            :     :                    :           :           :           :           :                       +- Project [NgramId#4L, TokenId#6L]
            :     :                    :           :           :           :           :                          +- Sort [NgramId#4L ASC NULLS FIRST, Position#5 ASC NULLS FIRST], true, 0
            :     :                    :           :           :           :           :                             +- Exchange rangepartitioning(NgramId#4L ASC NULLS FIRST, Position#5 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=570]
            :     :                    :           :           :           :           :
+- Filter isnotnull(NgramId#4L)
            :     :                    :           :           :           :           :
   +- FileScan parquet [NgramId#4L,Position#5,TokenId#6L] Batched: true, DataFilters: [isnotnull(NgramId#4L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
            :     :                    :           :           :           :           +- Sort [Tokens#21 ASC NULLS FIRST], false, 0
            :     :                    :           :           :           :              +- Exchange hashpartitioning(Tokens#21, 200), ENSURE_REQUIREMENTS, [plan_id=590]
            :     :                    :           :           :           :                 +- ObjectHashAggregate(keys=[NgramId#45L], functions=[collect_list(TokenId#47L, 0, 0)])
            :     :                    :           :           :           :                    +- Exchange hashpartitioning(NgramId#45L, 200), ENSURE_REQUIREMENTS, [plan_id=585]
            :     :                    :           :           :           :                       +- ObjectHashAggregate(keys=[NgramId#45L], functions=[partial_collect_list(TokenId#47L, 0, 0)])
            :     :                    :           :           :           :                          +- Project [NgramId#45L, TokenId#47L]
            :     :                    :           :           :           :                             +- Sort [NgramId#45L ASC NULLS FIRST, Position#46 ASC NULLS FIRST], true, 0
            :     :                    :           :           :           :                                +- Exchange rangepartitioning(NgramId#45L ASC NULLS FIRST, Position#46 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=580]
            :     :                    :           :           :           :                                   +- Filter isnotnull(NgramId#45L)
            :     :                    :           :           :           :                                      +- FileScan parquet [NgramId#45L,Position#46,TokenId#47L] Batched: true, DataFilters: [isnotnull(NgramId#45L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
            :     :                    :           :           :           +- Sort [Tokens#21 ASC NULLS FIRST], false, 0
            :     :                    :           :           :              +- Exchange hashpartitioning(Tokens#21, 200), ENSURE_REQUIREMENTS, [plan_id=605]
            :     :                    :           :           :                 +- ObjectHashAggregate(keys=[NgramId#74L], functions=[collect_list(TokenId#76L, 0, 0)])
            :     :                    :           :           :                    +- Exchange hashpartitioning(NgramId#74L, 200), ENSURE_REQUIREMENTS, [plan_id=600]
            :     :                    :           :           :                       +- ObjectHashAggregate(keys=[NgramId#74L], functions=[partial_collect_list(TokenId#76L, 0, 0)])
            :     :                    :           :           :                          +- Project [NgramId#74L, TokenId#76L]
            :     :                    :           :           :                             +- Sort [NgramId#74L ASC NULLS FIRST, Position#75 ASC NULLS FIRST], true, 0
            :     :                    :           :           :                                +- Exchange rangepartitioning(NgramId#74L ASC NULLS FIRST, Position#75 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=595]
            :     :                    :           :           :                                   +- Filter isnotnull(NgramId#74L)
            :     :                    :           :           :                                      +- FileScan parquet [NgramId#74L,Position#75,TokenId#76L] Batched: true, DataFilters: [isnotnull(NgramId#74L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
            :     :                    :           :           +- Sort [NgramId#10L ASC NULLS FIRST], false, 0
            :     :                    :           :              +- Exchange hashpartitioning(NgramId#10L, 200), ENSURE_REQUIREMENTS, [plan_id=613]
            :     :                    :           :                 +- Filter ((isnotnull(NgramId#10L) AND (size(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#11), true) > 0)) AND isnotnull(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#11)))
            :     :                    :           :                    +- FileScan parquet [NgramId#10L,Frequency#11] Batched: true, DataFilters: [isnotnull(NgramId#10L), (size(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Frequency:map<int,bigint>>
            :     :                    :           +- Sort [NgramId#121L ASC NULLS FIRST], false, 0
            :     :                    :              +- Exchange hashpartitioning(NgramId#121L, 200), ENSURE_REQUIREMENTS, [plan_id=621]
            :     :                    :                 +- Filter isnotnull(NgramId#121L)
            :     :                    :                    +- FileScan parquet [NgramId#121L] Batched: true, DataFilters: [isnotnull(NgramId#121L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint>
            :     :                    +- Sort [NgramId#150L ASC NULLS FIRST], false, 0
            :     :                       +- Exchange hashpartitioning(NgramId#150L, 200), ENSURE_REQUIREMENTS, [plan_id=629]
            :     :                          +- Filter isnotnull(NgramId#150L)
            :     :                             +- FileScan parquet [NgramId#150L] Batched: true, DataFilters: [isnotnull(NgramId#150L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint>
            :     +- Sort [NgramId#240L ASC NULLS FIRST, Year#218 ASC NULLS FIRST], false, 0
            :        +- Exchange hashpartitioning(NgramId#240L, Year#218, 200), ENSURE_REQUIREMENTS, [plan_id=706]
            :           +- Filter ((Year#218 >= 1800) AND (Year#218 < 2000))
            :              +- Generate explode(new_Frequency_L#210), [NgramId#240L], false, [Year#218, value#219L]
            :                 +- Project [NgramId#240L, map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency_L#141) AS new_Frequency_L#210]
            :                    +- SortMergeJoin [RightChildNgramId#71L], [NgramId#255L], Inner
            :                       :- Sort [RightChildNgramId#71L ASC NULLS FIRST], false, 0
            :                       :  +- Exchange hashpartitioning(RightChildNgramId#71L, 200), ENSURE_REQUIREMENTS, [plan_id=695]
            :                       :     +- Project [NgramId#240L, RightChildNgramId#71L, Frequency#253 AS Frequency_L#141]
            :                       :        +- SortMergeJoin [LeftChildNgramId#42L], [NgramId#252L], Inner
            :                       :           :- Sort [LeftChildNgramId#42L ASC NULLS FIRST], false, 0
            :                       :           :  +- Exchange hashpartitioning(LeftChildNgramId#42L, 200), ENSURE_REQUIREMENTS, [plan_id=687]
            :                       :           :     +- Project [NgramId#240L, LeftChildNgramId#42L, RightChildNgramId#71L]
            :                       :           :        +- SortMergeJoin [NgramId#240L], [NgramId#249L], Inner
            :                       :           :           :- Sort [NgramId#240L ASC NULLS FIRST], false, 0
            :                       :           :           :  +- Exchange hashpartitioning(NgramId#240L, 200), ENSURE_REQUIREMENTS, [plan_id=679]
            :                       :           :           :     +- Project [NgramId#240L, LeftChildNgramId#42L, RightChildNgramId#71L]
            :                       :           :           :        +- SortMergeJoin [RightChildTokenIds#36], [Tokens#21], Inner
            :                       :           :           :           :- Sort [RightChildTokenIds#36 ASC NULLS FIRST], false, 0
            :                       :           :           :           :  +- Exchange hashpartitioning(RightChildTokenIds#36, 200), ENSURE_REQUIREMENTS, [plan_id=671]
            :                       :           :           :           :     +- Project [NgramId#240L, RightChildTokenIds#36, LeftChildNgramId#42L]
            :                       :           :           :           :        +- SortMergeJoin [LeftChildTokenIds#31], [Tokens#21], Inner
            :                       :           :           :           :           :- Sort [LeftChildTokenIds#31 ASC NULLS FIRST], false, 0
            :                       :           :           :           :           :  +- Exchange hashpartitioning(LeftChildTokenIds#31, 200), ENSURE_REQUIREMENTS, [plan_id=656]
            :                       :           :           :           :           :     +- Project [NgramId#240L, slice(Ngram#24, 1, (Length#27 - 1)) AS LeftChildTokenIds#31, slice(Ngram#24, 2, (Length#27 - 1)) AS RightChildTokenIds#36]
            :                       :           :           :           :           :        +- Project [NgramId#240L, Tokens#21 AS Ngram#24, size(Tokens#21, true) AS Length#27]
            :                       :           :           :           :           :           +- Filter (size(Tokens#21, true) > 1)
            :                       :           :           :           :           :              +- ObjectHashAggregate(keys=[NgramId#240L], functions=[collect_list(TokenId#242L, 0, 0)])
            :                       :           :           :           :           :                 +- Exchange hashpartitioning(NgramId#240L, 200), ENSURE_REQUIREMENTS, [plan_id=642]
            :                       :           :           :           :           :                    +- ObjectHashAggregate(keys=[NgramId#240L], functions=[partial_collect_list(TokenId#242L, 0, 0)])
            :                       :           :           :           :           :                       +- Project [NgramId#240L, TokenId#242L]
            :                       :           :           :           :           :                          +- Sort [NgramId#240L ASC NULLS FIRST, Position#241 ASC NULLS FIRST], true, 0
            :                       :           :           :           :           :                             +- Exchange rangepartitioning(NgramId#240L ASC NULLS FIRST, Position#241 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=637]
            :                       :           :           :           :           :                                +- Filter isnotnull(NgramId#240L)
            :                       :           :           :           :           :
+- FileScan parquet [NgramId#240L,Position#241,TokenId#242L] Batched: true, DataFilters: [isnotnull(NgramId#240L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
            :                       :           :           :           :           +- Sort [Tokens#21 ASC NULLS FIRST], false, 0
            :                       :           :           :           :              +- Exchange hashpartitioning(Tokens#21, 200), ENSURE_REQUIREMENTS, [plan_id=657]
            :                       :           :           :           :                 +- ObjectHashAggregate(keys=[NgramId#243L], functions=[collect_list(TokenId#245L, 0, 0)])
            :                       :           :           :           :                    +- Exchange hashpartitioning(NgramId#243L, 200), ENSURE_REQUIREMENTS, [plan_id=652]
            :                       :           :           :           :                       +- ObjectHashAggregate(keys=[NgramId#243L], functions=[partial_collect_list(TokenId#245L, 0, 0)])
            :                       :           :           :           :                          +- Project [NgramId#243L, TokenId#245L]
            :                       :           :           :           :                             +- Sort [NgramId#243L ASC NULLS FIRST, Position#244 ASC NULLS FIRST], true, 0
            :                       :           :           :           :                                +- Exchange rangepartitioning(NgramId#243L ASC NULLS FIRST, Position#244 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=647]
            :                       :           :           :           :                                   +- Filter isnotnull(NgramId#243L)
            :                       :           :           :           :                                      +- FileScan parquet [NgramId#243L,Position#244,TokenId#245L] Batched: true, DataFilters: [isnotnull(NgramId#243L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
            :                       :           :           :           +- Sort [Tokens#21 ASC NULLS FIRST], false, 0
            :                       :           :           :              +- Exchange hashpartitioning(Tokens#21, 200), ENSURE_REQUIREMENTS, [plan_id=672]
            :                       :           :           :                 +- ObjectHashAggregate(keys=[NgramId#246L], functions=[collect_list(TokenId#248L, 0, 0)])
            :                       :           :           :                    +- Exchange hashpartitioning(NgramId#246L, 200), ENSURE_REQUIREMENTS, [plan_id=667]
            :                       :           :           :                       +- ObjectHashAggregate(keys=[NgramId#246L], functions=[partial_collect_list(TokenId#248L, 0, 0)])
            :                       :           :           :                          +- Project [NgramId#246L, TokenId#248L]
            :                       :           :           :                             +- Sort [NgramId#246L ASC NULLS FIRST, Position#247 ASC NULLS FIRST], true, 0
            :                       :           :           :                                +- Exchange rangepartitioning(NgramId#246L ASC NULLS FIRST, Position#247 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=662]
            :                       :           :           :                                   +- Filter isnotnull(NgramId#246L)
            :                       :           :           :                                      +- FileScan parquet [NgramId#246L,Position#247,TokenId#248L] Batched: true, DataFilters: [isnotnull(NgramId#246L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
            :                       :           :           +- Sort [NgramId#249L ASC NULLS FIRST], false, 0
            :                       :           :              +- Exchange hashpartitioning(NgramId#249L, 200), ENSURE_REQUIREMENTS, [plan_id=680]
            :                       :           :                 +- Filter isnotnull(NgramId#249L)
            :                       :           :                    +- FileScan parquet [NgramId#249L] Batched: true, DataFilters: [isnotnull(NgramId#249L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint>
            :                       :           +- Sort [NgramId#252L ASC NULLS FIRST], false, 0
            :                       :              +- Exchange hashpartitioning(NgramId#252L, 200), ENSURE_REQUIREMENTS, [plan_id=688]
            :                       :                 +- Filter ((isnotnull(NgramId#252L) AND (size(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#253), true) > 0)) AND isnotnull(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#253)))
            :                       :                    +- FileScan parquet [NgramId#252L,Frequency#253] Batched: true, DataFilters: [isnotnull(NgramId#252L), (size(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,180..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Frequency:map<int,bigint>>
            :                       +- Sort [NgramId#255L ASC NULLS FIRST], false, 0
            :                          +- Exchange hashpartitioning(NgramId#255L, 200), ENSURE_REQUIREMENTS, [plan_id=696]
            :                             +- Filter isnotnull(NgramId#255L)
            :                                +- FileScan parquet [NgramId#255L] Batched: true, DataFilters: [isnotnull(NgramId#255L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint>
            +- Sort [NgramId#276L ASC NULLS FIRST, Year#231 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(NgramId#276L, Year#231, 200), ENSURE_REQUIREMENTS, [plan_id=779]
                  +- Filter ((Year#231 >= 1800) AND (Year#231 < 2000))
                     +- Generate explode(new_Frequency_R#223), [NgramId#276L], false, [Year#231, value#232L]
                        +- Project [NgramId#276L, map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#292) AS new_Frequency_R#223]
                           +- SortMergeJoin [RightChildNgramId#71L], [NgramId#291L], Inner
                              :- Sort [RightChildNgramId#71L ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(RightChildNgramId#71L, 200), ENSURE_REQUIREMENTS, [plan_id=769]
                              :     +- Project [NgramId#276L, RightChildNgramId#71L]
                              :        +- SortMergeJoin [LeftChildNgramId#42L], [NgramId#288L], Inner
                              :           :- Sort [LeftChildNgramId#42L ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(LeftChildNgramId#42L, 200), ENSURE_REQUIREMENTS, [plan_id=761]
                              :           :     +- Project [NgramId#276L, LeftChildNgramId#42L, RightChildNgramId#71L]
                              :           :        +- SortMergeJoin [NgramId#276L], [NgramId#285L], Inner
                              :           :           :- Sort [NgramId#276L ASC NULLS FIRST], false, 0
                              :           :           :  +- Exchange hashpartitioning(NgramId#276L, 200), ENSURE_REQUIREMENTS, [plan_id=753]
                              :           :           :     +- Project [NgramId#276L, LeftChildNgramId#42L, RightChildNgramId#71L]
                              :           :           :        +- SortMergeJoin [RightChildTokenIds#36], [Tokens#21], Inner
                              :           :           :           :- Sort [RightChildTokenIds#36 ASC NULLS FIRST], false, 0
                              :           :           :           :  +- Exchange hashpartitioning(RightChildTokenIds#36, 200), ENSURE_REQUIREMENTS, [plan_id=745]
                              :           :           :           :     +- Project [NgramId#276L, RightChildTokenIds#36, LeftChildNgramId#42L]
                              :           :           :           :        +- SortMergeJoin [LeftChildTokenIds#31], [Tokens#21], Inner
                              :           :           :           :           :- Sort [LeftChildTokenIds#31 ASC NULLS FIRST], false, 0
                              :           :           :           :           :  +- Exchange hashpartitioning(LeftChildTokenIds#31, 200), ENSURE_REQUIREMENTS, [plan_id=730]
                              :           :           :           :           :     +- Project [NgramId#276L, slice(Ngram#24, 1, (Length#27 - 1)) AS LeftChildTokenIds#31, slice(Ngram#24, 2, (Length#27 - 1)) AS RightChildTokenIds#36]
                              :           :           :           :           :        +- Project [NgramId#276L, Tokens#21 AS Ngram#24, size(Tokens#21, true) AS Length#27]
                              :           :           :           :           :           +- Filter (size(Tokens#21, true) > 1)
                              :           :           :           :           :              +- ObjectHashAggregate(keys=[NgramId#276L], functions=[collect_list(TokenId#278L, 0, 0)])
                              :           :           :           :           :                 +- Exchange hashpartitioning(NgramId#276L, 200), ENSURE_REQUIREMENTS, [plan_id=716]
                              :           :           :           :           :                    +- ObjectHashAggregate(keys=[NgramId#276L], functions=[partial_collect_list(TokenId#278L, 0, 0)])
                              :           :           :           :           :                       +- Project [NgramId#276L, TokenId#278L]
                              :           :           :           :           :                          +- Sort [NgramId#276L ASC NULLS FIRST, Position#277 ASC NULLS FIRST], true, 0
                              :           :           :           :           :                             +- Exchange rangepartitioning(NgramId#276L ASC NULLS FIRST, Position#277 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=711]
                              :           :           :           :           :                                +- Filter isnotnull(NgramId#276L)
                              :           :           :           :           :                                   +- FileScan parquet [NgramId#276L,Position#277,TokenId#278L] Batched: true, DataFilters: [isnotnull(NgramId#276L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
                              :           :           :           :           +- Sort [Tokens#21 ASC NULLS FIRST], false, 0
                              :           :           :           :              +- Exchange hashpartitioning(Tokens#21, 200), ENSURE_REQUIREMENTS, [plan_id=731]
                              :           :           :           :                 +- ObjectHashAggregate(keys=[NgramId#279L], functions=[collect_list(TokenId#281L, 0, 0)])
                              :           :           :           :                    +- Exchange hashpartitioning(NgramId#279L, 200), ENSURE_REQUIREMENTS, [plan_id=726]
                              :           :           :           :                       +- ObjectHashAggregate(keys=[NgramId#279L], functions=[partial_collect_list(TokenId#281L, 0, 0)])
                              :           :           :           :                          +- Project [NgramId#279L, TokenId#281L]
                              :           :           :           :                             +- Sort [NgramId#279L ASC NULLS FIRST, Position#280 ASC NULLS FIRST], true, 0
                              :           :           :           :                                +- Exchange rangepartitioning(NgramId#279L ASC NULLS FIRST, Position#280 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=721]
                              :           :           :           :                                   +- Filter isnotnull(NgramId#279L)
                              :           :           :           :                                      +- FileScan parquet [NgramId#279L,Position#280,TokenId#281L] Batched: true, DataFilters: [isnotnull(NgramId#279L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
                              :           :           :           +- Sort [Tokens#21 ASC NULLS FIRST], false, 0
                              :           :           :              +- Exchange hashpartitioning(Tokens#21, 200), ENSURE_REQUIREMENTS, [plan_id=746]
                              :           :           :                 +- ObjectHashAggregate(keys=[NgramId#282L], functions=[collect_list(TokenId#284L, 0, 0)])
                              :           :           :                    +- Exchange hashpartitioning(NgramId#282L, 200), ENSURE_REQUIREMENTS, [plan_id=741]
                              :           :           :                       +- ObjectHashAggregate(keys=[NgramId#282L], functions=[partial_collect_list(TokenId#284L, 0, 0)])
                              :           :           :                          +- Project [NgramId#282L, TokenId#284L]
                              :           :           :                             +- Sort [NgramId#282L ASC NULLS FIRST, Position#283 ASC NULLS FIRST], true, 0
                              :           :           :                                +- Exchange rangepartitioning(NgramId#282L ASC NULLS FIRST, Position#283 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=736]
                              :           :           :                                   +- Filter isnotnull(NgramId#282L)
                              :           :           :                                      +- FileScan parquet [NgramId#282L,Position#283,TokenId#284L] Batched: true, DataFilters: [isnotnull(NgramId#282L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/contains.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Position:int,TokenId:bigint>
                              :           :           +- Sort [NgramId#285L ASC NULLS FIRST], false, 0
                              :           :              +- Exchange hashpartitioning(NgramId#285L, 200), ENSURE_REQUIREMENTS, [plan_id=754]
                              :           :                 +- Filter isnotnull(NgramId#285L)
                              :           :                    +- FileScan parquet [NgramId#285L] Batched: true, DataFilters: [isnotnull(NgramId#285L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint>
                              :           +- Sort [NgramId#288L ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(NgramId#288L, 200), ENSURE_REQUIREMENTS, [plan_id=762]
                              :                 +- Filter isnotnull(NgramId#288L)
                              :                    +- FileScan parquet [NgramId#288L] Batched: true, DataFilters: [isnotnull(NgramId#288L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint>
                              +- Sort [NgramId#291L ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(NgramId#291L, 200), ENSURE_REQUIREMENTS, [plan_id=770]
                                    +- Filter ((isnotnull(NgramId#291L) AND (size(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#292), true) > 0)) AND isnotnull(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000], values: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Frequency#292)))
                                       +- FileScan parquet [NgramId#291L,Frequency#292] Batched: true, DataFilters: [isnotnull(NgramId#291L), (size(map_concat(map(keys: [1800,1801,1802,1803,1804,1805,1806,1807,180..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/simhomes/binzc/data_transfer/parquets/data.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(NgramId)], ReadSchema: struct<NgramId:bigint,Frequency:map<int,bigint>>
